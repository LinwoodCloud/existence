
name: "build-web"

on:
  push:
    branches: [ main ]

env:
  GODOT_VERSION: 3.3.2
  EXPORT_NAME: Existence

jobs:
  export-web:
    name: Web Export üåê
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:3.3.2
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Setup üíª
        working-directory: game
        run: |
          mkdir -v -p build/web ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Web Build üîß
        working-directory: game
        run: godot -v --export "HTML5" ./build/web/index.html
      - name: Upload Artifact üöÄ
        uses: actions/upload-artifact@v2
        with:
          name: web-build
          path: game/build/web
  checks:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Test Build
        working-directory: docs
        run: |
          if [ -e yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
            npm ci
          else
            npm i
          fi
          npm run build
  gh-release:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs:
    - export-web
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }}
      - name: Copy web release
        uses: actions/download-artifact@v2
        with:
          name: web-build
          path: docs/static
      - name: Deploy
        working-directory: docs
        env:
          USE_SSH: true
          GIT_USER: git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "gh-actions"
          if [ -e yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
            npm ci
          else
            npm i
          fi
          npm run deploy